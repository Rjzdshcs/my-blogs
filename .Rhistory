blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
install.packages("xaringan")
blogdown:::serve_site()
xaringan:::inf_mr()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
library(plotly)
p<-plot_ly(economics, x=~date, y=~unemploy/pop)
library(plotly)
p<-plot_ly(economics, x=~date, y=~unemploy/pop)
p
?plot_ly()
blogdown:::serve_site()
library(dplyr)
economics%>%
plot_ly(x=~date, y=~unemploy/pop)%>%
layout(xaxis= list(title= "日期", zeroline=FALSE), yaxis=list(title="失业率", zeroline=FALSE), showgrid=FALSE,
title = "美国失业率")
library(dplyr)
library(plotly)
p<-plot_ly(economics,x=~date, y=~unemploy/pop)
p %>%
layout(xaxis= list(title= "日期", zeroline=FALSE), yaxis=list(title="失业率", zeroline=FALSE), showgrid=FALSE,
title = "美国失业率")
blogdown:::serve_site()
library(plotly)
p<-plot_ly(economics, x=~date, y=~unemploy/pop)
p
library(plotly)
library(dplyr)
economics %>%
plot_ly(x=~date, y=~unemploy/pop) %>%
layout(xaxis= list(title= "日期",zeroline=FALSE),yaxis=list(title="失业率", zeroline=FALSE), showgrid=FALSE,title ="美国失业率")
library(plotly)
library(dplyr)
economics %>%
plot_ly(x=~date, y=~unemploy/pop) %>%
layout(xaxis= list(title= "日期"),yaxis=list(title="失业率", zeroline=FALSE), showgrid=FALSE,title ="美国失业率")
blogdown:::new_post_addin()
library(dplyr)
library(knitr)
ct <- mtcars[, 1:8] %>%
head(10)
ct %>%
kable("html", caption = 'A table of the first 10 rows of the mtcars data.')
blogdown:::serve_site()
library(dplyr)
library(tidyr)
head(anscombe)
library(dplyr)
library(tidyr)
head(anscombe)
anscombe%>%
kable("html", caption = '安斯科姆数据集')
library(dplyr)
library(tidyr)
anscombe_tidy <- anscombe %>%
mutate(observation = seq_along(x1)) %>%
gather(key, value, -observation) %>%
separate(key, c("variable", "set"), 1, convert = TRUE) %>%
mutate(set = as.character(as.roman(set))) %>%
spread(variable, value) %>%
arrange(set)
head(anscombe_tidy)
library(dplyr)
library(tidyr)
anscombe_tidy <- anscombe %>%
mutate(observation = seq_along(x1)) %>%
gather(key, value, -observation) %>%
separate(key, c("variable", "set"), 1, convert = TRUE) %>%
mutate(set = as.character(as.roman(set))) %>%
spread(variable, value) %>%
arrange(set)
head(anscombe_tidy)
library(dplyr)
library(tidyr)
library(DT)
anscombe_tidy %>%
datatable(rownames = FALSE,
options = list(
pageLength = 11,
autoWidth = TRUE,
columnDefs = list(list(
className = 'dt-left',
targets = 0),
list(className = 'dt-center', targets = 1))))
library(dplyr)
library(tidyr)
library(knitr)
head(anscombe)
anscombe%>%
kable("html", caption = '安斯科姆数据集')
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
## ConsumerInvolvement.R
library(tidyverse)
library(psych)
consumers <- read_csv("customers_quan.csv") %>%
select(starts_with("p"))
## ConsumerInvolvement.R
library(tidyverse)
library(psych)
consumers <- read_csv("customers_quan.csv") %>%
select(starts_with("p"))
getwd()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
library(albersusa) # git.sr.ht/~hrbrmstr/albersusa | git[la|hu]b/hrbrmstr/albersusa
devtools::install("hrbrmstr/albersusa"")
devtools::install("hrbrmstr/albersusa")
devtools::install("hrbrmstr/albersusa")
devtools::install_github("hrbrmstr/albersusa")
devtools::install_github("hrbrmstr/rgeocodio")
library(albersusa)
library(rgeocodio)
library(albersusa)
library(rgeocodio)
library(tidyverse)
# 原博客里的数据
fil <- "https://query.data.world/s/awyahzfiikyoqi5ygpvauqslwmqltr"
read_csv(fil, col_types = "cd") %>%
select(area=1, pct=2) %>%
mutate(pct = pct/100) -> xdf # make percents proper percents
# 原博客里的数据
fil <- "https://query.data.world/s/awyahzfiikyoqi5ygpvauqslwmqltr"
read_csv(fil, col_types = "cd") %>%
select(area=1, pct=2) %>%
mutate(pct = pct/100) -> xdf # make percents proper percents
gc <- gio_batch_geocode(xdf$area)
#The result of the geocoding is a data frame that has various confidences associated with the result. We’ll pick the top one for each and then correct for the errant Hawaii longitude it gives back:
map2_df(gc$query, gc$response_results, ~{
out <- .y[1,,]
out$area <- .x
out
}) %>%
filter(!is.na(location.lat)) %>%
select(area, state = address_components.state, lat=location.lat, lon=location.lng) %>%
mutate(
lat = ifelse(grepl("Honolu", area), 21.3069, lat),
lon = ifelse(grepl("Honolu", area), -157.8583, lon)
) %>%
left_join(xdf) %>%
as_tibble() -> area_pct
area_pct
us <- usa_composite()
us_map <- fortify(us, region="name")
hi <- select(filter(area_pct, state == "HI"), lon, lat)
(hi <- points_elided(hi))
# 原博客里的数据
fil <- "https://query.data.world/s/awyahzfiikyoqi5ygpvauqslwmqltr"
read_csv(fil, col_types = "cd") %>%
select(area=1, pct=2) %>%
mutate(pct = pct/100) -> xdf # make percents proper percents
gc <- gio_batch_geocode(xdf$area)
#The result of the geocoding is a data frame that has various confidences associated with the result. We’ll pick the top one for each and then correct for the errant Hawaii longitude it gives back:
map2_df(gc$query, gc$response_results, ~{
out <- .y[1,,]
out$area <- .x
out
}) %>%
filter(!is.na(location.lat)) %>%
select(area, state = address_components.state, lat=location.lat, lon=location.lng) %>%
mutate(
lat = ifelse(grepl("Honolu", area), 21.3069, lat),
lon = ifelse(grepl("Honolu", area), -157.8583, lon)
) %>%
left_join(xdf) %>%
as_tibble() -> area_pct
area_pct
us <- usa_composite()
us_map <- fortify(us, region="name")
hi <- select(filter(area_pct, state == "HI"), lon, lat)
hi <- points_elided(hi)
?points_elided()
# 原博客里的数据
fil <- "https://query.data.world/s/awyahzfiikyoqi5ygpvauqslwmqltr"
read_csv(fil, col_types = "cd") %>%
select(area=1, pct=2) %>%
mutate(pct = pct/100) -> xdf # make percents proper percents
gc <- gio_batch_geocode(xdf$area)
#The result of the geocoding is a data frame that has various confidences associated with the result. We’ll pick the top one for each and then correct for the errant Hawaii longitude it gives back:
map2_df(gc$query, gc$response_results, ~{
out <- .y[1,,]
out$area <- .x
out
}) %>%
filter(!is.na(location.lat)) %>%
select(area, state = address_components.state, lat=location.lat, lon=location.lng) %>%
mutate(
lat = ifelse(grepl("Honolu", area), 21.3069, lat),
lon = ifelse(grepl("Honolu", area), -157.8583, lon)
) %>%
left_join(xdf) %>%
as_tibble() -> area_pct
area_pct
us <- usa_composite()
us_map <- fortify(us, region="name")
hi <- select(filter(area_pct, state == "HI"), lon, lat)
(hi <- points_elided(hi))
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
remove.packages(geocodio)
remove.packages(rgeocodio)
file.exists("~/.Rprofile")
help(.Rprofile)
file.edit(".Rprofile")
Sys.setenv(GEOCODIO_API_KEY="b2356d560550037c42544005b3557b24c5ac475")
blogdown:::serve_site()
find.package("rgeocodio")
remove.packages(rgeocodio, lib="/Users/BillyJack/Library/R/3.5/library")
remove.packages("rgeocodio", lib="/Users/BillyJack/Library/R/3.5/library")
blogdown:::serve_site()
blogdown:::serve_site()
git rm /content/post/2019-01-30-staticmap.Rmd
git rm content/post/2019-01-30-staticmap.Rmd
git rm -r content/post/2019-01-30-staticmap.Rmd
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
# Load packages
library(Rcpp)
library(tidyverse)
opt <-  theme(legend.position  = "none",
panel.background = element_rect(fill="black", color="black"),
plot.background  = element_rect(fill="black"),
axis.ticks       = element_blank(),
panel.grid       = element_blank(),
axis.title       = element_blank(),
axis.text        = element_blank())
# Cpp function to build the dataframe according the equations
cppFunction('DataFrame createTrajectory(int n, double x0, double y0,
double a1, double a2, double a3, double a4, double a5,
double a6) {
// create the columns
NumericVector x(n);
NumericVector y(n);
x[0]=x0;
y[0]=y0;
for(int i = 1; i < n; ++i) {
x[i] = 10*a1+(x[i-1]+a2*sin(a3*y[i-1]+a4))*cos(2*M_PI/(13+10*a6))+y[i-1]*sin(2*M_PI/(13+10*a6));
y[i] = 10*a5-(x[i-1]+a2*sin(a3*y[i-1]+a4))*sin(2*M_PI/(13+10*a6))+y[i-1]*cos(2*M_PI/(13+10*a6));
}
// return a new data frame
return DataFrame::create(_["x"]= x, _["y"]= y);
}
')
# Parameters (change them to create your own mandalaxies)
a1 <- -1.2
a2 <- 0.8
a3 <- -1.2
a4 <- -0.3
a5 <- -0.4
a6 <- -0.7
# Number of points to draw
npoints <- 4000000
# Creation of the data frame
df <- createTrajectory(npoints, 0, 0, a1, a2, a3, a4, a5, a6)
# Plot
plot <- ggplot(df) +
geom_point(aes(x, y), shape=46, alpha=0.01, size=0, color="white") +
scale_x_continuous(expand = c(0,0))+
scale_y_continuous(expand = c(0,0))+
coord_fixed() + opt
plot
# Load packages
library(Rcpp)
library(tidyverse)
opt <-  theme(legend.position  = "none",
panel.background = element_rect(fill="black", color="black"),
plot.background  = element_rect(fill="black"),
axis.ticks       = element_blank(),
panel.grid       = element_blank(),
axis.title       = element_blank(),
axis.text        = element_blank())
# Cpp function to build the dataframe according the equations
cppFunction('DataFrame createTrajectory(int n, double x0, double y0,
double a1, double a2, double a3, double a4, double a5,
double a6) {
// create the columns
NumericVector x(n);
NumericVector y(n);
x[0]=x0;
y[0]=y0;
for(int i = 1; i < n; ++i) {
x[i] = 10*a1+(x[i-1]+a2*sin(a3*y[i-1]+a4))*cos(2*M_PI/(13+10*a6))+y[i-1]*sin(2*M_PI/(13+10*a6));
y[i] = 10*a5-(x[i-1]+a2*sin(a3*y[i-1]+a4))*sin(2*M_PI/(13+10*a6))+y[i-1]*cos(2*M_PI/(13+10*a6));
}
// return a new data frame
return DataFrame::create(_["x"]= x, _["y"]= y);
}
')
# Parameters (change them to create your own mandalaxies)
a1 <- -1.2
a2 <- 0.8
a3 <- -1.2
a4 <- -0.3
a5 <- -0.4
a6 <- 0.7
# Number of points to draw
npoints <- 4000000
# Creation of the data frame
df <- createTrajectory(npoints, 0, 0, a1, a2, a3, a4, a5, a6)
# Plot
plot <- ggplot(df) +
geom_point(aes(x, y), shape=46, alpha=0.01, size=0, color="white") +
scale_x_continuous(expand = c(0,0))+
scale_y_continuous(expand = c(0,0))+
coord_fixed() + opt
plot
# Load packages
library(Rcpp)
library(tidyverse)
opt <-  theme(legend.position  = "none",
panel.background = element_rect(fill="black", color="black"),
plot.background  = element_rect(fill="black"),
axis.ticks       = element_blank(),
panel.grid       = element_blank(),
axis.title       = element_blank(),
axis.text        = element_blank())
# Cpp function to build the dataframe according the equations
cppFunction('DataFrame createTrajectory(int n, double x0, double y0,
double a1, double a2, double a3, double a4, double a5,
double a6) {
// create the columns
NumericVector x(n);
NumericVector y(n);
x[0]=x0;
y[0]=y0;
for(int i = 1; i < n; ++i) {
x[i] = 10*a1+(x[i-1]+a2*sin(a3*y[i-1]+a4))*cos(2*M_PI/(13+10*a6))+y[i-1]*sin(2*M_PI/(13+10*a6));
y[i] = 10*a5-(x[i-1]+a2*sin(a3*y[i-1]+a4))*sin(2*M_PI/(13+10*a6))+y[i-1]*cos(2*M_PI/(13+10*a6));
}
// return a new data frame
return DataFrame::create(_["x"]= x, _["y"]= y);
}
')
# Parameters (change them to create your own mandalaxies)
a1 <- -1.2
a2 <- 0.8
a3 <- -1.2
a4 <- -0.3
a5 <- -0.4
a6 <- 0.7
# Number of points to draw
npoints <- 4000000
# Creation of the data frame
df <- createTrajectory(npoints, 0, 0, a1, a2, a3, a4, a5, a6)
# Plot
plot <- ggplot(df) +
geom_point(aes(x, y), shape=46, alpha=0.01, size=0, color="blue") +
scale_x_continuous(expand = c(0,0))+
scale_y_continuous(expand = c(0,0))+
coord_fixed() + opt
plot
blogdown:::serve_site()
blogdown:::new_post_addin()
f <- function(x, n) x * dnorm(x) * pnorm(x)^(n-1)
for (i in 2:10) print(i * integrate(f, n = i, -Inf, Inf, abs.tol = 1e-20)$value)
100 + 15 * world_population * integrate(f, n = world_population, -Inf, Inf, abs.tol = 1e-20)$value
world_population <- 7.7e+09
100 + 15 * world_population * integrate(f, n = world_population, -Inf, Inf, abs.tol = 1e-20)$value
world_population <- 7.7e+09
global_wealth <- 1.68e+14
per_capita_wealth <- global_wealth /world_population
per_capita_wealth_sd <- per_capita_wealth * 0.15
per_capita_wealth
per_capita_wealth + per_capita_wealth_sd * world_population * integrate(f, n = world_population, -Inf, Inf, abs.tol = 1e-20)
per_capita_wealth + per_capita_wealth_sd *world_population * integrate(f, n =world_population, -Inf, Inf, abs.tol = 1e-20)
world_population <- 7.7e+09
global_wealth <- 1.68e+14
per_capita_wealth <- global_wealth / world_population
per_capita_wealth_sd <- per_capita_wealth * 0.15
per_capita_wealth
per_capita_wealth + per_capita_wealth_sd *world_population * integrate(f, n =world_population, -Inf, Inf, abs.tol = 1e-20)
world_population <- 7.7e+09
global_wealth <- 1.68e+14
f <- function(x, n) x * dnorm(x) * pnorm(x)^(n-1)
per_capita_wealth <- global_wealth / world_population
per_capita_wealth_sd <- per_capita_wealth * 0.15
per_capita_wealth
per_capita_wealth + per_capita_wealth_sd *world_population * integrate(f, n =world_population, -Inf, Inf, abs.tol = 1e-20)
world_population <- 7.7e+09
global_wealth <- 1.68e+14
f <- function(x, n) x * dnorm(x) * pnorm(x)^(n-1)
per_capita_wealth <- global_wealth / world_population
per_capita_wealth_sd <- per_capita_wealth * 0.15
per_capita_wealth
per_capita_wealth + per_capita_wealth_sd *world_population * integrate(f, n =world_population, -Inf, Inf, abs.tol = 1e-20)$value
1.4e+11 / per_capita_wealth * 100
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
install.packages("blogdown")
blogdown:::serve_site()
blogdown::install_hugo()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
install.packages("rmarkdown")
library(rmarkdown)
install.packages("bookdown")
install.packages("blogdown")
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown::install_hugo()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::update_meta_addin()
blogdown:::serve_site()
install.packages(c("backports", "BH", "bibtex", "blogdown", "bookdown", "boot", "broom", "callr", "car", "carData", "cartogram", "cli", "covr", "curl", "data.table", "DBI", "dendextend", "deSolve", "digest", "DT", "e1071", "effects", "factoextra", "fansi", "foreign", "geepack", "ggalluvial", "glmnet", "haven", "hms", "igraph", "ISOcodes", "jiebaR", "KernSmooth", "knitr", "latticeExtra", "leaflet", "lime", "maptools", "MASS", "Matrix", "maxLik", "mgcv", "mime", "miscTools", "msm", "mvtnorm", "network", "nlme", "openxlsx", "pagedown", "pillar", "plot3D", "plyr", "pracma", "prettyunits", "quadprog", "quanteda", "quantreg", "R6", "Radviz", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "reticulate", "rgdal", "RgoogleMaps", "rmarkdown", "roxygen2", "RSpectra", "RSQLite", "rticles", "Rttf2pt1", "rtweet", "rversions", "rvest", "scales", "selectr", "slam", "sna", "sp", "spam", "SparseM", "stringi", "survival", "systemfit", "testthat", "tidyverse", "tinytex", "tm", "topicmodels", "TTR", "vctrs", "xfun"))
install.packages(c("backports", "BH", "bibtex", "blogdown", "bookdown", "boot", "broom", "callr", "car", "carData", "cartogram", "cli", "covr", "curl", "data.table", "DBI", "dendextend", "deSolve", "digest", "DT", "e1071", "effects", "factoextra", "fansi", "foreign", "geepack", "ggalluvial", "glmnet", "haven", "hms", "igraph", "ISOcodes", "jiebaR", "KernSmooth", "knitr", "latticeExtra", "leaflet", "lime", "maptools", "MASS", "Matrix", "maxLik", "mgcv", "mime", "miscTools", "msm", "mvtnorm", "network", "nlme", "openxlsx", "pagedown", "pillar", "plot3D", "plyr", "pracma", "prettyunits", "quadprog", "quanteda", "quantreg", "R6", "Radviz", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "reticulate", "rgdal", "RgoogleMaps", "rmarkdown", "roxygen2", "RSpectra", "RSQLite", "rticles", "Rttf2pt1", "rtweet", "rversions", "rvest", "scales", "selectr", "slam", "sna", "sp", "spam", "SparseM", "stringi", "survival", "systemfit", "testthat", "tidyverse", "tinytex", "tm", "topicmodels", "TTR", "vctrs", "xfun"))
install.packages(c("backports", "BH", "bibtex", "blogdown", "bookdown", "boot", "broom", "callr", "car", "carData", "cartogram", "cli", "covr", "curl", "data.table", "DBI", "dendextend", "deSolve", "digest", "DT", "e1071", "effects", "factoextra", "fansi", "foreign", "geepack", "ggalluvial", "glmnet", "haven", "hms", "igraph", "ISOcodes", "jiebaR", "KernSmooth", "knitr", "latticeExtra", "leaflet", "lime", "maptools", "MASS", "Matrix", "maxLik", "mgcv", "mime", "miscTools", "msm", "mvtnorm", "network", "nlme", "openxlsx", "pagedown", "pillar", "plot3D", "plyr", "pracma", "prettyunits", "quadprog", "quanteda", "quantreg", "R6", "Radviz", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "reticulate", "rgdal", "RgoogleMaps", "rmarkdown", "roxygen2", "RSpectra", "RSQLite", "rticles", "Rttf2pt1", "rtweet", "rversions", "rvest", "scales", "selectr", "slam", "sna", "sp", "spam", "SparseM", "stringi", "survival", "systemfit", "testthat", "tidyverse", "tinytex", "tm", "topicmodels", "TTR", "vctrs", "xfun"))
install.packages(c("backports", "BH", "bibtex", "blogdown", "bookdown", "boot", "broom", "callr", "car", "carData", "cartogram", "cli", "covr", "curl", "data.table", "DBI", "dendextend", "deSolve", "digest", "DT", "e1071", "effects", "factoextra", "fansi", "foreign", "geepack", "ggalluvial", "glmnet", "haven", "hms", "igraph", "ISOcodes", "jiebaR", "KernSmooth", "knitr", "latticeExtra", "leaflet", "lime", "maptools", "MASS", "Matrix", "maxLik", "mgcv", "mime", "miscTools", "msm", "mvtnorm", "network", "nlme", "openxlsx", "pagedown", "pillar", "plot3D", "plyr", "pracma", "prettyunits", "quadprog", "quanteda", "quantreg", "R6", "Radviz", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "reticulate", "rgdal", "RgoogleMaps", "rmarkdown", "roxygen2", "RSpectra", "RSQLite", "rticles", "Rttf2pt1", "rtweet", "rversions", "rvest", "scales", "selectr", "slam", "sna", "sp", "spam", "SparseM", "stringi", "survival", "systemfit", "testthat", "tidyverse", "tinytex", "tm", "topicmodels", "TTR", "vctrs", "xfun"))
install.packages(c("backports", "BH", "bibtex", "blogdown", "bookdown", "boot", "broom", "callr", "car", "carData", "cartogram", "cli", "covr", "curl", "data.table", "DBI", "dendextend", "deSolve", "digest", "DT", "e1071", "effects", "factoextra", "fansi", "foreign", "geepack", "ggalluvial", "glmnet", "haven", "hms", "igraph", "ISOcodes", "jiebaR", "KernSmooth", "knitr", "latticeExtra", "leaflet", "lime", "maptools", "MASS", "Matrix", "maxLik", "mgcv", "mime", "miscTools", "msm", "mvtnorm", "network", "nlme", "openxlsx", "pagedown", "pillar", "plot3D", "plyr", "pracma", "prettyunits", "quadprog", "quanteda", "quantreg", "R6", "Radviz", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "reticulate", "rgdal", "RgoogleMaps", "rmarkdown", "roxygen2", "RSpectra", "RSQLite", "rticles", "Rttf2pt1", "rtweet", "rversions", "rvest", "scales", "selectr", "slam", "sna", "sp", "spam", "SparseM", "stringi", "survival", "systemfit", "testthat", "tidyverse", "tinytex", "tm", "topicmodels", "TTR", "vctrs", "xfun"))
install.packages(c("backports", "BH", "bibtex", "blogdown", "bookdown", "boot", "broom", "callr", "car", "carData", "cartogram", "cli", "covr", "curl", "data.table", "DBI", "dendextend", "deSolve", "digest", "DT", "e1071", "effects", "factoextra", "fansi", "foreign", "geepack", "ggalluvial", "glmnet", "haven", "hms", "igraph", "ISOcodes", "jiebaR", "KernSmooth", "knitr", "latticeExtra", "leaflet", "lime", "maptools", "MASS", "Matrix", "maxLik", "mgcv", "mime", "miscTools", "msm", "mvtnorm", "network", "nlme", "openxlsx", "pagedown", "pillar", "plot3D", "plyr", "pracma", "prettyunits", "quadprog", "quanteda", "quantreg", "R6", "Radviz", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "reticulate", "rgdal", "RgoogleMaps", "rmarkdown", "roxygen2", "RSpectra", "RSQLite", "rticles", "Rttf2pt1", "rtweet", "rversions", "rvest", "scales", "selectr", "slam", "sna", "sp", "spam", "SparseM", "stringi", "survival", "systemfit", "testthat", "tidyverse", "tinytex", "tm", "topicmodels", "TTR", "vctrs", "xfun"))
install.packages(c("backports", "BH", "bibtex", "blogdown", "bookdown", "boot", "broom", "callr", "car", "carData", "cartogram", "cli", "covr", "curl", "data.table", "DBI", "dendextend", "deSolve", "digest", "DT", "e1071", "effects", "factoextra", "fansi", "foreign", "geepack", "ggalluvial", "glmnet", "haven", "hms", "igraph", "ISOcodes", "jiebaR", "KernSmooth", "knitr", "latticeExtra", "leaflet", "lime", "maptools", "MASS", "Matrix", "maxLik", "mgcv", "mime", "miscTools", "msm", "mvtnorm", "network", "nlme", "openxlsx", "pagedown", "pillar", "plot3D", "plyr", "pracma", "prettyunits", "quadprog", "quanteda", "quantreg", "R6", "Radviz", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "reticulate", "rgdal", "RgoogleMaps", "rmarkdown", "roxygen2", "RSpectra", "RSQLite", "rticles", "Rttf2pt1", "rtweet", "rversions", "rvest", "scales", "selectr", "slam", "sna", "sp", "spam", "SparseM", "stringi", "survival", "systemfit", "testthat", "tidyverse", "tinytex", "tm", "topicmodels", "TTR", "vctrs", "xfun"))
install.packages(c("backports", "BH", "bibtex", "blogdown", "bookdown", "boot", "broom", "callr", "car", "carData", "cartogram", "cli", "covr", "curl", "data.table", "DBI", "dendextend", "deSolve", "digest", "DT", "e1071", "effects", "factoextra", "fansi", "foreign", "geepack", "ggalluvial", "glmnet", "haven", "hms", "igraph", "ISOcodes", "jiebaR", "KernSmooth", "knitr", "latticeExtra", "leaflet", "lime", "maptools", "MASS", "Matrix", "maxLik", "mgcv", "mime", "miscTools", "msm", "mvtnorm", "network", "nlme", "openxlsx", "pagedown", "pillar", "plot3D", "plyr", "pracma", "prettyunits", "quadprog", "quanteda", "quantreg", "R6", "Radviz", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "reticulate", "rgdal", "RgoogleMaps", "rmarkdown", "roxygen2", "RSpectra", "RSQLite", "rticles", "Rttf2pt1", "rtweet", "rversions", "rvest", "scales", "selectr", "slam", "sna", "sp", "spam", "SparseM", "stringi", "survival", "systemfit", "testthat", "tidyverse", "tinytex", "tm", "topicmodels", "TTR", "vctrs", "xfun"))
install.packages(c("backports", "BH", "bibtex", "blogdown", "bookdown", "boot", "broom", "callr", "car", "carData", "cartogram", "cli", "covr", "curl", "data.table", "DBI", "dendextend", "deSolve", "digest", "DT", "e1071", "effects", "factoextra", "fansi", "foreign", "geepack", "ggalluvial", "glmnet", "haven", "hms", "igraph", "ISOcodes", "jiebaR", "KernSmooth", "knitr", "latticeExtra", "leaflet", "lime", "maptools", "MASS", "Matrix", "maxLik", "mgcv", "mime", "miscTools", "msm", "mvtnorm", "network", "nlme", "openxlsx", "pagedown", "pillar", "plot3D", "plyr", "pracma", "prettyunits", "quadprog", "quanteda", "quantreg", "R6", "Radviz", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "reticulate", "rgdal", "RgoogleMaps", "rmarkdown", "roxygen2", "RSpectra", "RSQLite", "rticles", "Rttf2pt1", "rtweet", "rversions", "rvest", "scales", "selectr", "slam", "sna", "sp", "spam", "SparseM", "stringi", "survival", "systemfit", "testthat", "tidyverse", "tinytex", "tm", "topicmodels", "TTR", "vctrs", "xfun"))
install.packages(c("backports", "BH", "bibtex", "blogdown", "bookdown", "boot", "broom", "callr", "car", "carData", "cartogram", "cli", "covr", "curl", "data.table", "DBI", "dendextend", "deSolve", "digest", "DT", "e1071", "effects", "factoextra", "fansi", "foreign", "geepack", "ggalluvial", "glmnet", "haven", "hms", "igraph", "ISOcodes", "jiebaR", "KernSmooth", "knitr", "latticeExtra", "leaflet", "lime", "maptools", "MASS", "Matrix", "maxLik", "mgcv", "mime", "miscTools", "msm", "mvtnorm", "network", "nlme", "openxlsx", "pagedown", "pillar", "plot3D", "plyr", "pracma", "prettyunits", "quadprog", "quanteda", "quantreg", "R6", "Radviz", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "reticulate", "rgdal", "RgoogleMaps", "rmarkdown", "roxygen2", "RSpectra", "RSQLite", "rticles", "Rttf2pt1", "rtweet", "rversions", "rvest", "scales", "selectr", "slam", "sna", "sp", "spam", "SparseM", "stringi", "survival", "systemfit", "testthat", "tidyverse", "tinytex", "tm", "topicmodels", "TTR", "vctrs", "xfun"))
install.packages(c("backports", "BH", "bibtex", "blogdown", "bookdown", "boot", "broom", "callr", "car", "carData", "cartogram", "cli", "covr", "curl", "data.table", "DBI", "dendextend", "deSolve", "digest", "DT", "e1071", "effects", "factoextra", "fansi", "foreign", "geepack", "ggalluvial", "glmnet", "haven", "hms", "igraph", "ISOcodes", "jiebaR", "KernSmooth", "knitr", "latticeExtra", "leaflet", "lime", "maptools", "MASS", "Matrix", "maxLik", "mgcv", "mime", "miscTools", "msm", "mvtnorm", "network", "nlme", "openxlsx", "pagedown", "pillar", "plot3D", "plyr", "pracma", "prettyunits", "quadprog", "quanteda", "quantreg", "R6", "Radviz", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "reticulate", "rgdal", "RgoogleMaps", "rmarkdown", "roxygen2", "RSpectra", "RSQLite", "rticles", "Rttf2pt1", "rtweet", "rversions", "rvest", "scales", "selectr", "slam", "sna", "sp", "spam", "SparseM", "stringi", "survival", "systemfit", "testthat", "tidyverse", "tinytex", "tm", "topicmodels", "TTR", "vctrs", "xfun"))
install.packages(c("backports", "BH", "bibtex", "blogdown", "bookdown", "boot", "broom", "callr", "car", "carData", "cartogram", "cli", "covr", "curl", "data.table", "DBI", "dendextend", "deSolve", "digest", "DT", "e1071", "effects", "factoextra", "fansi", "foreign", "geepack", "ggalluvial", "glmnet", "haven", "hms", "igraph", "ISOcodes", "jiebaR", "KernSmooth", "knitr", "latticeExtra", "leaflet", "lime", "maptools", "MASS", "Matrix", "maxLik", "mgcv", "mime", "miscTools", "msm", "mvtnorm", "network", "nlme", "openxlsx", "pagedown", "pillar", "plot3D", "plyr", "pracma", "prettyunits", "quadprog", "quanteda", "quantreg", "R6", "Radviz", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "reticulate", "rgdal", "RgoogleMaps", "rmarkdown", "roxygen2", "RSpectra", "RSQLite", "rticles", "Rttf2pt1", "rtweet", "rversions", "rvest", "scales", "selectr", "slam", "sna", "sp", "spam", "SparseM", "stringi", "survival", "systemfit", "testthat", "tidyverse", "tinytex", "tm", "topicmodels", "TTR", "vctrs", "xfun"))
blogdown:::serve_site()
install.packages(c("maxLik", "mvtnorm", "prettyunits", "Rttf2pt1", "stringi"))
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::update_hugo()
blogdown::hugo_version()
blogdown::find_hugo()
blogdown:::find_hugo()
blogdown:::serve_site()
blogdown:::update_meta_addin()
blogdown:::update_meta_addin()
blogdown:::insert_image_addin()
blogdown:::update_meta_addin()
blogdown:::update_meta_addin()
blogdown:::update_meta_addin()
blogdown:::serve_site()
blogdown:::serve_site()
servr::daemon_stop(2)
blogdown::hugo_server()
blogdown::hugo_version()
blogdown:::find_tags(value = "2020大选")
blogdown:::find_tags()
blogdown:::blogdown_site()
blogdown:::find_hugo()
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
library(blogdown)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::update_meta_addin()
blogdown:::insert_image_addin()
blogdown:::new_post_addin()
blogdown::update_hugo()
blogdown:::serve_site()
install.packages("formattable")
blogdown::hugo_version()
install_hugo(force = TRUE)
blogdown::hugo_version()
blogdown:::serve_site()
